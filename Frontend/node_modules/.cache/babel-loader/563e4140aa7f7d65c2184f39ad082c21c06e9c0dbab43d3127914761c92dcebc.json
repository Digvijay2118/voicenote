{"ast":null,"code":"import _slicedToArray from\"D:/work/voicenote/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{ReactMic}from'react-mic';import AudioPlayer from'react-h5-audio-player';import'react-h5-audio-player/lib/styles.css';import io from'socket.io-client';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket=io('http://localhost:5000');// Replace with your server URL\nvar AudioRecorder=function AudioRecorder(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRecording=_useState2[0],setIsRecording=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),audioBlob=_useState4[0],setAudioBlob=_useState4[1];var startRecording=function startRecording(){setIsRecording(true);};var stopRecording=function stopRecording(){setIsRecording(false);};var onData=function onData(recordedBlob){// Do something with recordedBlob if needed\n};var onStop=function onStop(recordedBlob){setAudioBlob(recordedBlob.blob);};var sendAudio=function sendAudio(){if(audioBlob){socket.emit('send-audio',audioBlob);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ReactMic,{record:isRecording,onData:onData,onStop:onStop,className:\"sound-wave\",mimeType:\"audio/webm\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startRecording,disabled:isRecording,children:\"Start Recording\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stopRecording,disabled:!isRecording,children:\"Stop Recording\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendAudio,disabled:!audioBlob,children:\"Send Audio\"}),audioBlob&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AudioPlayer,{src:URL.createObjectURL(audioBlob),autoPlay:true,controls:true})})]});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","ReactMic","AudioPlayer","io","axios","jsx","_jsx","jsxs","_jsxs","socket","AudioRecorder","_useState","_useState2","_slicedToArray","isRecording","setIsRecording","_useState3","_useState4","audioBlob","setAudioBlob","startRecording","stopRecording","onData","recordedBlob","onStop","blob","sendAudio","emit","children","record","className","mimeType","onClick","disabled","src","URL","createObjectURL","autoPlay","controls"],"sources":["D:/work/voicenote/Frontend/src/AudioRecorder.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ReactMic } from 'react-mic';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst socket = io('http://localhost:5000'); // Replace with your server URL\r\n\r\nconst AudioRecorder = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n\r\n  const startRecording = () => {\r\n    setIsRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n\r\n  const onData = (recordedBlob) => {\r\n    // Do something with recordedBlob if needed\r\n  };\r\n\r\n  const onStop = (recordedBlob) => {\r\n    setAudioBlob(recordedBlob.blob);\r\n  };\r\n\r\n  const sendAudio = () => {\r\n    if (audioBlob) {\r\n      socket.emit('send-audio', audioBlob);\r\n     \r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <ReactMic\r\n        record={isRecording}\r\n        onData={onData}\r\n        onStop={onStop}\r\n        className=\"sound-wave\"\r\n        mimeType=\"audio/webm\"\r\n      />\r\n      <button onClick={startRecording} disabled={isRecording}>\r\n        Start Recording\r\n      </button>\r\n      <button onClick={stopRecording} disabled={!isRecording}>\r\n        Stop Recording\r\n      </button>\r\n      <button onClick={sendAudio} disabled={!audioBlob}>\r\n        Send Audio\r\n      </button>\r\n      {audioBlob && (\r\n        <div>\r\n          <AudioPlayer\r\n            src={URL.createObjectURL(audioBlob)}\r\n            autoPlay\r\n            controls\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;\r\n"],"mappings":"gHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,QAAQ,KAAQ,WAAW,CACpC,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAC/C,MAAO,sCAAsC,CAC7C,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CACjC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,GAAM,CAAAC,MAAM,CAAGN,EAAE,CAAC,uBAAuB,CAAC,CAAE;AAE5C,GAAM,CAAAO,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,IAAAC,SAAA,CAAsCX,QAAQ,CAAC,KAAK,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA9CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,IAAAI,UAAA,CAAkChB,QAAQ,CAAC,IAAI,CAAC,CAAAiB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAE9B,GAAM,CAAAG,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC3BL,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,GAAM,CAAAM,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1BN,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,GAAM,CAAAO,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAIC,YAAY,CAAK,CAC/B;AAAA,CACD,CAED,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAID,YAAY,CAAK,CAC/BJ,YAAY,CAACI,YAAY,CAACE,IAAI,CAAC,CACjC,CAAC,CAED,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACtB,GAAIR,SAAS,CAAE,CACbT,MAAM,CAACkB,IAAI,CAAC,YAAY,CAAET,SAAS,CAAC,CAEtC,CACF,CAAC,CAID,mBACEV,KAAA,QAAAoB,QAAA,eACEtB,IAAA,CAACL,QAAQ,EACP4B,MAAM,CAAEf,WAAY,CACpBQ,MAAM,CAAEA,MAAO,CACfE,MAAM,CAAEA,MAAO,CACfM,SAAS,CAAC,YAAY,CACtBC,QAAQ,CAAC,YAAY,CACtB,CAAC,cACFzB,IAAA,WAAQ0B,OAAO,CAAEZ,cAAe,CAACa,QAAQ,CAAEnB,WAAY,CAAAc,QAAA,CAAC,iBAExD,CAAQ,CAAC,cACTtB,IAAA,WAAQ0B,OAAO,CAAEX,aAAc,CAACY,QAAQ,CAAE,CAACnB,WAAY,CAAAc,QAAA,CAAC,gBAExD,CAAQ,CAAC,cACTtB,IAAA,WAAQ0B,OAAO,CAAEN,SAAU,CAACO,QAAQ,CAAE,CAACf,SAAU,CAAAU,QAAA,CAAC,YAElD,CAAQ,CAAC,CACRV,SAAS,eACRZ,IAAA,QAAAsB,QAAA,cACEtB,IAAA,CAACJ,WAAW,EACVgC,GAAG,CAAEC,GAAG,CAACC,eAAe,CAAClB,SAAS,CAAE,CACpCmB,QAAQ,MACRC,QAAQ,MACT,CAAC,CACC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA5B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}